[{"E:\\progs\\my-latest-cv\\client\\src\\index.tsx":"1","E:\\progs\\my-latest-cv\\client\\src\\reportWebVitals.ts":"2","E:\\progs\\my-latest-cv\\client\\src\\App.tsx":"3","E:\\progs\\my-latest-cv\\client\\src\\store\\index.ts":"4","E:\\progs\\my-latest-cv\\client\\src\\components\\theme.ts":"5","E:\\progs\\my-latest-cv\\client\\src\\services\\apollo\\client.ts":"6","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\index.tsx":"7","E:\\progs\\my-latest-cv\\client\\src\\components\\Login\\index.tsx":"8","E:\\progs\\my-latest-cv\\client\\src\\components\\Signup\\index.tsx":"9","E:\\progs\\my-latest-cv\\client\\src\\services\\apollo\\variables\\todo.ts":"10","E:\\progs\\my-latest-cv\\client\\src\\store\\reducers\\index.ts":"11","E:\\progs\\my-latest-cv\\client\\src\\services\\constants.ts":"12","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\styles.ts":"13","E:\\progs\\my-latest-cv\\client\\src\\services\\axiosClient.ts":"14","E:\\progs\\my-latest-cv\\client\\src\\components\\Login\\styles.ts":"15","E:\\progs\\my-latest-cv\\client\\src\\components\\Signup\\styles.ts":"16","E:\\progs\\my-latest-cv\\client\\src\\store\\actions\\user.ts":"17","E:\\progs\\my-latest-cv\\client\\src\\store\\reducers\\user.ts":"18","E:\\progs\\my-latest-cv\\client\\src\\store\\actions\\actionTypes.ts":"19","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TabPanel\\index.tsx":"20","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\index.tsx":"21","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoList\\index.tsx":"22","E:\\progs\\my-latest-cv\\client\\src\\components\\generalDeps\\Snack\\index.tsx":"23","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoList\\styles.ts":"24","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoItem\\index.tsx":"25","E:\\progs\\my-latest-cv\\client\\src\\components\\generalDeps\\Modal\\index.tsx":"26","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\CVPreview\\index.tsx":"27","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\UploadImage\\index.tsx":"28","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\DownloadCVLink\\index.tsx":"29","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoItem\\styles.ts":"30","E:\\progs\\my-latest-cv\\client\\src\\services\\user.tsx":"31","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\TestDoc\\index.tsx":"32","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoModalBody\\index.tsx":"33","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoModalBody\\styles.ts":"34"},{"size":637,"mtime":1611951975060,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1608892098563,"results":"37","hashOfConfig":"36"},{"size":1045,"mtime":1614458610350,"results":"38","hashOfConfig":"36"},{"size":323,"mtime":1611951975062,"results":"39","hashOfConfig":"36"},{"size":1064,"mtime":1613332175739,"results":"40","hashOfConfig":"36"},{"size":654,"mtime":1613764684343,"results":"41","hashOfConfig":"36"},{"size":3888,"mtime":1613332175734,"results":"42","hashOfConfig":"36"},{"size":3274,"mtime":1613332175736,"results":"43","hashOfConfig":"36"},{"size":3757,"mtime":1613332175737,"results":"44","hashOfConfig":"36"},{"size":1339,"mtime":1613930808014,"results":"45","hashOfConfig":"36"},{"size":150,"mtime":1611951975063,"results":"46","hashOfConfig":"36"},{"size":164,"mtime":1611951975061,"results":"47","hashOfConfig":"36"},{"size":1636,"mtime":1613332175735,"results":"48","hashOfConfig":"36"},{"size":211,"mtime":1613764664284,"results":"49","hashOfConfig":"36"},{"size":417,"mtime":1613332175736,"results":"50","hashOfConfig":"36"},{"size":503,"mtime":1613332175737,"results":"51","hashOfConfig":"36"},{"size":378,"mtime":1613332175742,"results":"52","hashOfConfig":"36"},{"size":784,"mtime":1612029729322,"results":"53","hashOfConfig":"36"},{"size":100,"mtime":1612020970211,"results":"54","hashOfConfig":"36"},{"size":386,"mtime":1613332175732,"results":"55","hashOfConfig":"36"},{"size":295,"mtime":1613332175731,"results":"56","hashOfConfig":"36"},{"size":3692,"mtime":1613930888989,"results":"57","hashOfConfig":"36"},{"size":722,"mtime":1613332175739,"results":"58","hashOfConfig":"36"},{"size":711,"mtime":1613830662395,"results":"59","hashOfConfig":"36"},{"size":2277,"mtime":1613332175732,"results":"60","hashOfConfig":"36"},{"size":488,"mtime":1613332175738,"results":"61","hashOfConfig":"36"},{"size":644,"mtime":1613332175729,"results":"62","hashOfConfig":"36"},{"size":480,"mtime":1613332175731,"results":"63","hashOfConfig":"36"},{"size":396,"mtime":1613332175730,"results":"64","hashOfConfig":"36"},{"size":538,"mtime":1613332175733,"results":"65","hashOfConfig":"36"},{"size":664,"mtime":1611493738266,"results":"66","hashOfConfig":"36"},{"size":674,"mtime":1613332175730,"results":"67","hashOfConfig":"36"},{"size":1178,"mtime":1613930905776,"results":"68","hashOfConfig":"36"},{"size":170,"mtime":1613834522694,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"mairzt",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},"E:\\progs\\my-latest-cv\\client\\src\\index.tsx",[],["145","146"],"E:\\progs\\my-latest-cv\\client\\src\\reportWebVitals.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\App.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\store\\index.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\theme.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\services\\apollo\\client.ts",["147"],"import { ApolloClient, InMemoryCache, gql } from \"@apollo/client\";\r\nimport { todosVar, todoListControllerVar } from \"./variables/todo\";\r\n\r\nexport const cache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        todos: {\r\n          read() {\r\n            return todosVar();\r\n          },\r\n        },\r\n        todoListController: {\r\n          read() {\r\n            return todoListControllerVar();\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://localhost:4000/graphql\",\r\n  // uri: \"https://my-latest-cv.herokuapp.com/graphql\",\r\n  cache,\r\n});\r\n\r\nexport default client;\r\n","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Login\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Signup\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\services\\apollo\\variables\\todo.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\store\\reducers\\index.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\services\\constants.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\styles.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\services\\axiosClient.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Login\\styles.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Signup\\styles.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\store\\actions\\user.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\store\\reducers\\user.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\store\\actions\\actionTypes.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TabPanel\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoList\\index.tsx",["148","149","150","151","152"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { makeStyles, Button } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { List, ListSubheader } from \"@material-ui/core\";\r\nimport TodoItem from \"../TodoItem\";\r\nimport { Todo } from \"@store/types\";\r\nimport TodoModalBody from \"../TodoModalBody/\";\r\nimport {\r\n  GET_TODOS,\r\n  GET_LOCAL_TODOS,\r\n  todosVar,\r\n  todoListControllerVar,\r\n  dropListController,\r\n} from \"@services/apollo/variables/todo\";\r\nimport Modal from \"@comps/generalDeps/Modal\";\r\nimport { ADD_TODO } from \"@services/apollo/variables/todo\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  useLazyQuery,\r\n  useQuery,\r\n  useReactiveVar,\r\n  useMutation,\r\n} from \"@apollo/client\";\r\nimport styles from \"./styles\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Todos = () => {\r\n  const { data: testTodos } = useQuery(GET_LOCAL_TODOS);\r\n  const tdLC = useReactiveVar(todoListControllerVar);\r\n  const classes = useStyles();\r\n  const [\r\n    getTodos,\r\n    { loading: todosAreloading, data: remoteTodos },\r\n  ] = useLazyQuery(GET_TODOS);\r\n  const [runAddTodoMutation, { data: toggledTodo }] = useMutation(ADD_TODO);\r\n  const [isAddTodoModalOpen, setAddTodoModalState] = useState<boolean>(false);\r\n  const user = useSelector((state: any) => state.user);\r\n\r\n  const showCurrent = () =>\r\n    todoListControllerVar({ ...dropListController, current: true });\r\n\r\n  const showFinished = () =>\r\n    todoListControllerVar({ ...dropListController, finished: true });\r\n\r\n  const showAll = () =>\r\n    todoListControllerVar({ ...dropListController, all: true });\r\n\r\n  const addTodo = useCallback((title: string, description: string = \"\") => {\r\n    runAddTodoMutation({\r\n      variables: {\r\n        title,\r\n        description,\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user && !remoteTodos) getTodos({ variables: { ownerId: user.id } });\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (remoteTodos && !testTodos.length) todosVar(remoteTodos.getTodos);\r\n  }, [remoteTodos]);\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        className={classes.todoList}\r\n        subheader={\r\n          <ListSubheader className={classes.listSubHeader}>\r\n            <div>\r\n              <Button\r\n                className={clsx({ [classes.activeCategoryBtn]: tdLC.current })}\r\n                color=\"primary\"\r\n                onClick={showCurrent}\r\n              >\r\n                Current\r\n              </Button>\r\n              <Button\r\n                className={clsx({ [classes.activeCategoryBtn]: tdLC.finished })}\r\n                color=\"primary\"\r\n                onClick={showFinished}\r\n              >\r\n                Finished\r\n              </Button>\r\n              <Button\r\n                className={clsx({ [classes.activeCategoryBtn]: tdLC.all })}\r\n                color=\"primary\"\r\n                onClick={showAll}\r\n              >\r\n                All\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setAddTodoModalState(true)}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Modal\r\n                open={isAddTodoModalOpen}\r\n                onClose={() => setAddTodoModalState(false)}\r\n              >\r\n                <TodoModalBody addTodo={addTodo} />\r\n              </Modal>\r\n            </div>\r\n          </ListSubheader>\r\n        }\r\n        dense\r\n      >\r\n        {remoteTodos &&\r\n          remoteTodos.getTodos.map((todo: Todo) => (\r\n            <TodoItem key={todo.id} todo={todo} />\r\n          ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","E:\\progs\\my-latest-cv\\client\\src\\components\\generalDeps\\Snack\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoList\\styles.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoItem\\index.tsx",["153"],"import React, { useState } from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  IconButton,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  TOGGLE_TODO,\r\n  todoListControllerVar,\r\n} from \"@services/apollo/variables/todo\";\r\nimport ArrowDropDownCircle from \"@material-ui/icons/ArrowDropDownCircle\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { Todo } from \"@store/types\";\r\nimport clsx from \"clsx\";\r\nimport styles from \"./styles\";\r\nconst useStyles = makeStyles(styles);\r\n\r\ninterface TodoItemProps {\r\n  todo: Todo;\r\n}\r\n\r\nconst TodoItem = ({ todo }: TodoItemProps) => {\r\n  const classes = useStyles();\r\n  const [arrowDown, setArrowState] = useState<boolean>(false);\r\n\r\n  const isTodoVisible = (todo: Todo) => {\r\n    if (todoListControllerVar().current && !todo.isDone) return true;\r\n    else if (todoListControllerVar().finished && todo.isDone) return true;\r\n    else if (todoListControllerVar().all) return true;\r\n    else return false;\r\n  };\r\n\r\n  const [runToggleTodoMutation, { data: toggledTodo }] = useMutation(\r\n    TOGGLE_TODO\r\n  );\r\n\r\n  const toggleTodo = (todoId: string) => (\r\n    event: React.ChangeEvent<HTMLInputElement>,\r\n    checked: boolean\r\n  ) => {\r\n    runToggleTodoMutation({\r\n      variables: {\r\n        id: todoId,\r\n      },\r\n    });\r\n  };\r\n\r\n  return isTodoVisible(todo) ? (\r\n    <ListItem\r\n      classes={{\r\n        root: clsx(classes.todoListItem, {\r\n          [classes.done]: todo.isDone,\r\n        }),\r\n      }}\r\n      key={todo.id}\r\n    >\r\n      <ListItemText\r\n        primary={\r\n          <div className={classes.todoItemPrimary}>\r\n            <div>{todo.title}</div>\r\n          </div>\r\n        }\r\n        secondary={arrowDown && todo.description}\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <IconButton onClick={() => setArrowState(!arrowDown)}>\r\n          <ArrowDropDownCircle\r\n            className={clsx(classes.todoDescriptionArrow, {\r\n              [classes.todoDescriptionExpanded]: arrowDown,\r\n            })}\r\n          />\r\n        </IconButton>\r\n        <Checkbox\r\n          edge=\"end\"\r\n          onChange={toggleTodo(todo.id)}\r\n          checked={todo.isDone}\r\n        />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  ) : null;\r\n};\r\n\r\nexport default TodoItem;\r\n","E:\\progs\\my-latest-cv\\client\\src\\components\\generalDeps\\Modal\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\CVPreview\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\UploadImage\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\DownloadCVLink\\index.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoItem\\styles.ts",[],"E:\\progs\\my-latest-cv\\client\\src\\services\\user.tsx",[],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\CV\\deps\\TestDoc\\index.tsx",[],["154","155"],"E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoModalBody\\index.tsx",["156"],"import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./styles\";\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst TodoModalBody = ({ addTodo }: { addTodo: Function }) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n\r\n  return (\r\n    <>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          <TextField\r\n            value={title}\r\n            onChange={(event: any) => setTitle(event.target.value)}\r\n            placeholder=\"text\"\r\n            fullWidth\r\n            required\r\n          />\r\n          <TextField\r\n            value={description}\r\n            onChange={(event: any) => setDescription(event.target.value)}\r\n            placeholder=\"link\"\r\n            fullWidth\r\n          />\r\n        </DialogContentText>\r\n        <DialogActions>\r\n          <Button onClick={() => addTodo(title, description)}>Add</Button>\r\n        </DialogActions>\r\n      </DialogContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TodoModalBody;\r\n","E:\\progs\\my-latest-cv\\client\\src\\components\\Home\\deps\\TodoModalBody\\styles.ts",["157"],"import { createStyles, Theme } from \"@material-ui/core\";\r\nimport theme from \"../../../theme\";\r\nconst styles = (draw: Theme) => createStyles({});\r\nexport default styles;\r\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":39,"nodeType":"164","messageId":"165","endLine":1,"endColumn":42},{"ruleId":"162","severity":1,"message":"166","line":34,"column":16,"nodeType":"164","messageId":"165","endLine":34,"endColumn":31},{"ruleId":"162","severity":1,"message":"167","line":36,"column":38,"nodeType":"164","messageId":"165","endLine":36,"endColumn":49},{"ruleId":"168","severity":1,"message":"169","line":56,"column":6,"nodeType":"170","endLine":56,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":60,"column":6,"nodeType":"170","endLine":60,"endColumn":12,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":64,"column":6,"nodeType":"170","endLine":64,"endColumn":19,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"167","line":36,"column":41,"nodeType":"164","messageId":"165","endLine":36,"endColumn":52},{"ruleId":"158","replacedBy":"176"},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","severity":1,"message":"178","line":14,"column":9,"nodeType":"164","messageId":"165","endLine":14,"endColumn":16},{"ruleId":"162","severity":1,"message":"179","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"@typescript-eslint/no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'todosAreloading' is assigned a value but never used.","'toggledTodo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'runAddTodoMutation'. Either include it or remove the dependency array.","ArrayExpression",["182"],"React Hook useEffect has missing dependencies: 'getTodos' and 'remoteTodos'. Either include them or remove the dependency array.",["183"],"React Hook useEffect has a missing dependency: 'testTodos.length'. Either include it or remove the dependency array.",["184"],["180"],["181"],"'classes' is assigned a value but never used.","'theme' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [runAddTodoMutation]",{"range":"191","text":"192"},"Update the dependencies array to be: [getTodos, remoteTodos, user]",{"range":"193","text":"194"},"Update the dependencies array to be: [remoteTodos, testTodos.length]",{"range":"195","text":"196"},[1787,1789],"[runAddTodoMutation]",[1899,1905],"[getTodos, remoteTodos, user]",[2012,2025],"[remoteTodos, testTodos.length]"]